# Generated by Django 4.1.2 on 2022-10-26 18:36

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('mobile', models.CharField(error_messages={'unique': '此手机号码已注册'}, help_text='手机号', max_length=11, unique=True, verbose_name='手机号')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'db_table': 'user',
                'ordering': ['-id'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Api',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=30, verbose_name='接口名称')),
                ('method', models.CharField(max_length=10, verbose_name='method')),
                ('url', models.TextField(blank=True, verbose_name='url')),
                ('bodyType', models.CharField(max_length=30, verbose_name='数据类型')),
                ('queryData', models.JSONField(default=list, verbose_name='params')),
                ('headersData', models.JSONField(default=list, verbose_name='headers')),
                ('cookies', models.JSONField(default=list, verbose_name='cookies')),
                ('formData', models.JSONField(default=list, verbose_name='form-data')),
                ('formUrlencodedData', models.JSONField(default=list, verbose_name='x-www-form-urlencoded')),
                ('rawData', models.JSONField(default=dict, verbose_name='raw')),
                ('postCondition', models.JSONField(default=list, verbose_name='后置条件')),
                ('response', models.JSONField(default=dict, verbose_name='response')),
                ('api_env', models.IntegerField(blank=True, null=True, verbose_name='执行环境')),
                ('creat_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
            ],
            options={
                'verbose_name': '接口',
                'verbose_name_plural': '接口',
                'db_table': 'api',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50, null=True, verbose_name='用例名称')),
                ('info', models.CharField(blank=True, default='', max_length=1000, verbose_name='用例信息')),
                ('case_env', models.IntegerField(blank=True, null=True, verbose_name='用例环境')),
                ('steps', models.JSONField(default=list, verbose_name='用例步骤')),
                ('creat_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, to_field='username', verbose_name='创建人')),
            ],
            options={
                'verbose_name': '用例',
                'verbose_name_plural': '用例',
                'db_table': 'case',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='报告名称')),
                ('creat_time', models.DateTimeField(auto_now_add=True)),
                ('case', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='interface.case', verbose_name='所属用例')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, to_field='username', verbose_name='创建人')),
            ],
            options={
                'verbose_name': '报告',
                'verbose_name_plural': '报告',
                'db_table': 'report',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=30, null=True, verbose_name='项目名称')),
                ('info', models.CharField(blank=True, default='', max_length=1000, verbose_name='项目信息')),
                ('env', models.IntegerField(blank=True, null=True, verbose_name='项目环境')),
                ('creat_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, to_field='username', verbose_name='创建人')),
            ],
            options={
                'verbose_name': '项目',
                'verbose_name_plural': '项目',
                'db_table': 'project',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Files',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=50, verbose_name='文件名称')),
                ('file', models.FileField(upload_to='upload_files', verbose_name='文件路径')),
                ('api', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='interface.api', verbose_name='接口')),
            ],
            options={
                'verbose_name': '文件列表',
                'verbose_name_plural': '文件列表',
                'db_table': 'files',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Crontab',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='任务名称')),
                ('desc', models.CharField(blank=True, max_length=255, verbose_name='任务描述')),
                ('func', models.CharField(blank=True, max_length=255, verbose_name='作业')),
                ('func_type', models.IntegerField(blank=True, verbose_name='作业类型')),
                ('args', models.CharField(blank=True, max_length=255, verbose_name='作业参数')),
                ('kwargs', models.CharField(blank=True, max_length=255, verbose_name='作业关键字参数')),
                ('trigger', models.CharField(default='date', max_length=25, verbose_name='触发器')),
                ('trigger_condition', models.CharField(max_length=255, verbose_name='触发器条件')),
                ('job_state', models.IntegerField(default=0, verbose_name='任务状态')),
                ('creat_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, to_field='username', verbose_name='创建人')),
            ],
            options={
                'verbose_name': '定时任务',
                'verbose_name_plural': '定时任务',
                'db_table': 'crontab',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Config',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=30, verbose_name='名称')),
                ('hosts', models.JSONField(default=list, verbose_name='服务')),
                ('variables', models.JSONField(default=list, verbose_name='变量')),
                ('params', models.JSONField(default=list, verbose_name='参数')),
                ('type', models.CharField(choices=[('0', '全局变量'), ('1', '全局参数'), ('2', '环境配置')], max_length=10)),
                ('creat_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='interface.project', verbose_name='所属项目')),
            ],
            options={
                'verbose_name': '配置',
                'verbose_name_plural': '配置',
                'db_table': 'config',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='case',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='interface.project', verbose_name='所属项目'),
        ),
        migrations.AddField(
            model_name='api',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='interface.project', verbose_name='所属项目'),
        ),
    ]
